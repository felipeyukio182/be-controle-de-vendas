swagger: '2.0'
info:
  description: 'Endpoints referentes ao sistema controle de vendas.'
  version: 1.0.0
  title: "Backend - Controle de vendas"

host: be-controle-de-vendas.onrender.com
tags:
  - name: Ping
    description: "Verificar status do backend."
  - name: Authorization
    description: "Login e manipulação de tokens para acesso ao sistema."
  - name: People
    description: "Cadastro, edição, leitura e remoção de registros de pessoas no sistema."
  - name: Products
    description: "Cadastro, edição, leitura e remoção de registros de produtos no sistema."
schemes:
  - https
  - http
paths:
  /auth/login:
    post:
      tags:
        - Authorization
      summary: "Login no sistema"
      description: 'Para realizar o acesso ao sistema.'
      operationId: "loginController"
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: "Credenciais do usuario para acesso ao sistema."
          required: true
          schema:
            type: object
            properties:
              username:
                type: string
              password:
                type: string
      responses:
        '200':
          description: "Operação realizada com sucesso."
          schema:
            type: object
            properties:
              user:
                $ref: '#/definitions/User'
              token:
                type: string
              refreshToken:
                type: string
  /auth/refresh:
    post:
      tags:
        - Authorization
      summary: "Refresh Token"
      description: "Para atualizar os tokens do usuario."
      operationId: "refreshTokenController"
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: authorization
          in: header
          description: "Bearer token do usuario."
          required: true
          type: string
        - name: body
          in: body
          description: "Body com o refresh token do usuario."
          required: true
          schema:
            type: object
            properties:
              refreshToken:
                type: string
      responses:
        '200':
          description: "Operação realizada com sucesso."
          schema:
            type: object
            properties:
              newTokens:
                type: object
                properties:
                  token:
                    type: string
                  refreshToken:
                    type: string

  /:
    get:
      tags:
        - Ping
      summary: "Verifica status do backend."
      description: "Verifica se o backend está ativo no momento."
      operationId: "ping"
      produces:
        - application/json
      responses:
        '200':
          description: "Operação realizada com sucesso."
          schema:
            type: object
            properties:
              msg:
                type: string
                
  /people:
    get:
      tags:
        - People
      summary: "Busca todas as pessoas cadastradas no sistema."
      description: "Busca todas os registros de pessoas cadastradas no sistema."
      operationId: getPeopleController
      produces:
        - application/json
      responses:
        '200':
          description: "Operação realizada com sucesso."
          schema:
            type: object
            properties:
              people:
                type: array
                items:
                  $ref: '#/definitions/Person'
      security:
        - authorization: []
    post:
      tags:
        - People
      summary: "Cadastra uma nova pessoa."
      description: "Cadastra um novo registro de pessoa no sistema."
      operationId: postPersonController
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: person
          in: body
          description: "Dados da nova pessoa a ser cadastrada."
          required: true
          schema:
            $ref: "#/definitions/PersonWithoutId"
              
      responses:
        '200':
          description: "Operação realizada com sucesso."
      security:
        - authorization: []

  /people/{personId}:
    get:
      tags:
        - People
      summary: "Buscar pessoa por ID."
      description: "Busca o registro da pessoa pelo ID."
      operationId: getPersonController
      produces:
        - application/json
      parameters:
        - name: personId
          in: path
          description: "ID da pessoa."
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: "Operação realizada com sucesso."
          schema:
            $ref: '#/definitions/Person'
      security:
        - authorization: []
    put:
      tags:
        - People
      summary: "Atualiza uma pessoa do sistema."
      description: 'Atualiza o registro de uma pessoa no sistema.'
      operationId: putPersonController
      produces:
        - application/json
      parameters:
        - name: personId
          in: path
          description: "ID da pessoa a ser atualizada."
          required: true
          type: integer
          format: int64
        - name: person
          in: body
          description: "Dados da pessoa a ser atualizada."
          required: true
          schema:
            $ref: "#/definitions/Person"
      responses:
        '200':
          description: "Operação realizada com sucesso."
      security:
        - authorization: []
    delete:
      tags:
        - People
      summary: "Remove uma pessoa do sistema."
      description: 'Remove o registro de uma pessoa no sistema.'
      operationId: deletePersonController
      produces:
        - application/json
      parameters:
        - name: personId
          in: path
          description: "ID da pessoa a ser removida."
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: "Operação realizada com sucesso."
      security:
        - authorization: []

securityDefinitions:
  authorization:
    type: apiKey
    name: authorization
    in: header

definitions:
  User:
    type: object
    properties:
      name:
        type: string
      email:
        type: string
      username:
        type: string
      id:
        type: integer
        format: int32
        
  Person:
    type: object
    properties:
      id:
        type: integer
        format: int32
      name:
        type: string
      cpfCnpj:
        type: string
      inscEst:
        type: string
      address:
        $ref: "#/definitions/Address"
  
  PersonWithoutId:
    type: object
    properties:
      name:
        type: string
      cpfCnpj:
        type: string
      inscEst:
        type: string
      address:
        $ref: "#/definitions/Address"
  
  Address:
    type: object
    properties:
      state:
        type: string
      city:
        type: string
      district:
        type: string
      street:
        type: string
      number:
        type: string
        

externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
